{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { environment } from './../../../environments/environment';\nimport * as TodayPreviewActions from './today-preview.actions';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nexport class TodayPreviewEffects {\n  constructor(actions$, http) {\n    this.actions$ = actions$;\n    this.http = http;\n    this.findLocationDetails = this.actions$.pipe(ofType(TodayPreviewActions.FIND_LOCATION_DETAILS), switchMap(response => {\n      return this.http.get(environment.locationSearchApi + response.payload.latt + ',' + response.payload.long).pipe(map(responseData => {\n        return new TodayPreviewActions.UpdateLocation({\n          latitude: response.payload.latt,\n          longitude: response.payload.long,\n          title: responseData[0].title,\n          locationType: responseData[0].location_type,\n          woeid: responseData[0].woeid\n        });\n      }), catchError(error => {\n        return of(new TodayPreviewActions.ErrorLocation(error.statusText));\n      }));\n    }));\n    this.fetchWeatherForecast = this.actions$.pipe(ofType(TodayPreviewActions.UPDATE_LOCATION), switchMap(response => {\n      const dateTime = new Date();\n      return this.http.get(environment.locationDayApi + response.payload.woeid).pipe(map(responseData => {\n        return new TodayPreviewActions.UpdateWeather(responseData.consolidated_weather);\n      }));\n    }));\n  }\n  static {\n    this.ɵfac = function TodayPreviewEffects_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TodayPreviewEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodayPreviewEffects,\n      factory: TodayPreviewEffects.ɵfac\n    });\n  }\n}\n__decorate([Effect()], TodayPreviewEffects.prototype, \"fetchWeatherForecast\", void 0);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}